---
name: pre_merge_yocto
run-name: Compile Yocto Build

on:
  workflow_dispatch:
    inputs:
      qcom-build-utils-pr-number:
        description: qcom-build-utils-pr-number (keep empty to use `latest` branch)
        required: false
        type: string
      pr:
        description: Pull request number
        type: string
        required: true
      sha:
        description: Head sha of the PR
        type: string
        required: true
      ref:
        description: Target branch
        type: string
        required: true
      repo:
        description: Target repository
        type: string
        required: true

jobs:
  init-status:
    name: Initialize Status
    runs-on: ubuntu-latest
    steps:
      - name: Set Status
        uses: qualcomm-linux/kernel-config/.github/actions/workflow_status@main
        with:
          sha: ${{ github.event.inputs.sha || github.sha }}
          action_mode: start
          check_name: "Yocto Build Generation"
          repo: ${{ github.event.inputs.repo || github.repository }}
          GH_TOKEN: ${{ secrets.PAT }}

  init:
    name: Initialize Workflow
    needs: init-status
    runs-on: ubuntu-latest
    outputs:
      commit_sha: ${{ steps.get_sha.outputs.commit_sha }}
    steps:
      - name: Update Summary
        run: |
          echo "## Ubuntu Package Generation" >> $GITHUB_STEP_SUMMARY
          echo "- Pull Request Number: \`${{ github.event.inputs.pr || 'N/A' }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Head Commit SHA: \`${{ github.event.inputs.sha || 'N/A' }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Target Branch: \`${{ github.event.inputs.ref || 'N/A' }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Target Repository: \`${{ github.event.inputs.repo || 'N/A' }}\`" >> $GITHUB_STEP_SUMMARY

  loading:
    name: Load Parameters
    needs: init-status
    uses: sgaud-quic/kernel-config/.github/workflows/loading.yml@main
    secrets: inherit

  build_yocto:
    name: Build Yocto
    needs: [init-status, init, loading]
    uses: sgaud-quic/kernel-config/.github/workflows/yocto-build.yml@main
    secrets: inherit
    with:
      docker_image: kmake-image:ver.1.0
      pr: ${{ github.event.inputs.pr || '' }}
      SHA: ${{ github.event.inputs.sha }}
      ref: ${{ github.event.inputs.ref || 'qcom-next' }}
      repo: ${{ github.event.inputs.repo || 'qualcomm-linux-stg/kernel' }}
      build_matrix: ${{ needs.loading.outputs.ubuntu_matrix }}